{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.46.61228",
      "templateHash": "9261947526543359121"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "baseName": {
      "type": "string",
      "defaultValue": "rpagels",
      "metadata": {
        "description": "Base name that will appear for all resources."
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Three letter environment abreviation to denote environment that will appear in all resource names"
      }
    },
    "tag_appname": {
      "type": "string",
      "defaultValue": "appname"
    },
    "tag_createdBy": {
      "type": "string",
      "defaultValue": "yourname"
    },
    "tag_costCenter": {
      "type": "string",
      "defaultValue": "12345678"
    },
    "tag_nickName": {
      "type": "string",
      "defaultValue": "yourname"
    }
  },
  "variables": {
    "resourceGroupName": "[toLower(format('rg-{0}-{1}-{2}', parameters('baseName'), parameters('environmentName'), parameters('location')))]",
    "storageAccountName": "[format('storage{0}', uniqueString(variables('resourceGroupName')))]",
    "containerregistryName": "[format('cr{0}', uniqueString(variables('resourceGroupName')))]",
    "containerName": "[format('containers-{0}', uniqueString(variables('resourceGroupName')))]",
    "containerAppName": "[format('ca-{0}', uniqueString(variables('resourceGroupName')))]",
    "containerAppEnvName": "[format('cae-{0}', uniqueString(variables('resourceGroupName')))]",
    "containerAppLogAnalyticsName": "[format('calog-{0}', uniqueString(variables('resourceGroupName')))]",
    "containerImage": "nginx:latest",
    "defaultTags": {
      "App": "[parameters('tag_appname')]",
      "CostCenter": "[parameters('tag_costCenter')]",
      "CreatedBy": "[parameters('tag_createdBy')]",
      "NickName": "[parameters('tag_nickName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "environment": "[parameters('environmentName')]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storageAccountModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "5167067353809135306"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "variables": {
            "storageAccountNamev2": "[toLower(format('sta{0}', uniqueString(resourceGroup().id)))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[variables('storageAccountNamev2')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "containersModule",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerregistryName": {
            "value": "[variables('containerregistryName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "11497651734009473907"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "containerregistryName": {
              "type": "string"
            },
            "acrAdminUserEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable an admin user that has push/pull permission to the registry."
              }
            },
            "acrSku": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Tier of your Azure Container Registry."
              },
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('containerregistryName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "displayName": "Container Registry",
                "container.registry": "[parameters('containerregistryName')]"
              },
              "sku": {
                "name": "[parameters('acrSku')]"
              },
              "properties": {
                "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
              }
            }
          ],
          "outputs": {
            "acrLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerregistryName')), '2023-01-01-preview').loginServer]"
            },
            "output_acr_username": {
              "type": "string",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerregistryName')), '2023-01-01-preview').username]"
            },
            "output_acr_pass": {
              "type": "string",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerregistryName')), '2023-01-01-preview').passwords[0].value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('containerName')]",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppEnvName": {
            "value": "[variables('containerAppEnvName')]"
          },
          "containerAppLogAnalyticsName": {
            "value": "[variables('containerAppLogAnalyticsName')]"
          },
          "containerAppName": {
            "value": "[variables('containerAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containerregistryName": {
            "value": "[variables('containerregistryName')]"
          },
          "containerregistryNameLoginServer": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'containersModule'), '2020-10-01').outputs.acrLoginServer.value]"
          },
          "containerregistryNameCredentials": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'containersModule'), '2020-10-01').outputs.output_acr_pass.value]"
          },
          "containerImage": {
            "value": "[variables('containerImage')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "16916030888826681114"
            }
          },
          "parameters": {
            "containerAppName": {
              "type": "string"
            },
            "containerAppEnvName": {
              "type": "string"
            },
            "containerAppLogAnalyticsName": {
              "type": "string"
            },
            "containerregistryName": {
              "type": "string"
            },
            "containerregistryNameLoginServer": {
              "type": "string"
            },
            "containerregistryNameCredentials": {
              "type": "securestring"
            },
            "defaultTags": {
              "type": "object"
            },
            "containerImage": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "allowedValues": [
                "northcentralusstage",
                "eastus",
                "eastus2",
                "northeurope",
                "canadacentral"
              ],
              "metadata": {
                "description": "Specifies the location for all resources."
              }
            },
            "targetPort": {
              "type": "int",
              "defaultValue": 8080,
              "metadata": {
                "description": "Specifies the container port."
              }
            },
            "cpuCore": {
              "type": "string",
              "defaultValue": "0.5",
              "metadata": {
                "description": "Number of CPU cores the container can use. Can be with a maximum of two decimals."
              }
            },
            "memorySize": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "Amount of memory (in gibibytes, GiB) allocated to the container up to 4GiB. Can be with a maximum of two decimals. Ratio with CPU cores must be equal to 2."
              }
            },
            "minReplicas": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 25,
              "minValue": 0,
              "metadata": {
                "description": "Minimum number of replicas that will be deployed"
              }
            },
            "maxReplicas": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 25,
              "minValue": 0,
              "metadata": {
                "description": "Maximum number of replicas that will be deployed"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppLogAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppEnvName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "Consumption"
              },
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2022-10-01').primarySharedKey]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": true,
                    "targetPort": "[parameters('targetPort')]",
                    "allowInsecure": false,
                    "traffic": [
                      {
                        "latestRevision": true,
                        "weight": 100
                      }
                    ]
                  },
                  "registries": [
                    {
                      "server": "[parameters('containerregistryNameLoginServer')]",
                      "username": "[parameters('containerregistryName')]",
                      "passwordSecretRef": "[parameters('containerregistryName')]"
                    }
                  ],
                  "secrets": [
                    {
                      "name": "[parameters('containerregistryName')]",
                      "value": "[parameters('containerregistryNameCredentials')]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "name": "[parameters('containerAppName')]",
                      "image": "[parameters('containerImage')]",
                      "resources": {
                        "cpu": "[json(parameters('cpuCore'))]",
                        "memory": "[format('{0}Gi', parameters('memorySize'))]"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": "[parameters('minReplicas')]",
                    "maxReplicas": "[parameters('maxReplicas')]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2022-10-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'containersModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    }
  ]
}